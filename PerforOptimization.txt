Tooling for benchmarking and tracking:
=====================================
	0. Logger class
	1. Timer class
	2. Trace Memory Allocations - Easy way
	3. Visual Benchmarking
	4. Profiling
 
Performance optimization aspects:
================================
1. Avoid undesired copies
	1. Pass objects by reference
	2. Member initializer list
	3. std::vector usage:	a)reserve b)emplace_back
	4. Return value optimization

2. Avoid heap allocations
	1. Stack vs heap allocations
	2. std::arrays vs std::vector
	3. Move semantics
	4. Faster strings - std::string and std::string_view class

3. Cache friendly code
	1. Heap allocation - memory fragmentation
	2. Multidimensional arrays 

4. Parallelism
	4.1 Multithreading
		4.1.1 std::threads
		4.1.2 c++ run faster with std::async


